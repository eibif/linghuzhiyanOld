{
  "info": {
    "name": "LingHuZhiYan E2E Smoke",
    "description": "端到端用例：管理员登录→注册教师/学生→赋予教师角色→发公告/消息→教师创建并发布实验与任务→管理员分配→学生获取与发讨论",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080", "type": "string" },
    { "key": "authHeader", "value": "", "type": "string" },
    { "key": "adminUsername", "value": "user1", "type": "string" },
    { "key": "adminPassword", "value": "string", "type": "string" },
    { "key": "teacherUsername", "value": "teacher01", "type": "string" },
    { "key": "teacherEmail", "value": "teacher01@example.com", "type": "string" },
    { "key": "teacherPassword", "value": "Tpass123", "type": "string" },
    { "key": "studentUsername", "value": "student01", "type": "string" },
    { "key": "studentEmail", "value": "student01@example.com", "type": "string" },
    { "key": "studentPassword", "value": "Spass123", "type": "string" },
    { "key": "student2Username", "value": "student02", "type": "string" },
    { "key": "student2Email", "value": "student02@example.com", "type": "string" },
    { "key": "student2Password", "value": "Spass123", "type": "string" },
    { "key": "student3Username", "value": "student03", "type": "string" },
    { "key": "student3Email", "value": "student03@example.com", "type": "string" },
    { "key": "student3Password", "value": "Spass123", "type": "string" },
    { "key": "teacherAuth", "value": "", "type": "string" },
    { "key": "studentAuth", "value": "", "type": "string" },
  { "key": "student2Auth", "value": "", "type": "string" },
    { "key": "teacherUserId", "value": "", "type": "string" },
    { "key": "studentUserId", "value": "", "type": "string" },
  { "key": "student2UserId", "value": "", "type": "string" },
  { "key": "student3UserId", "value": "", "type": "string" },
  { "key": "adminAvatarUrl", "value": "", "type": "string" },
    { "key": "experimentId", "value": "", "type": "string" },
    { "key": "taskId", "value": "", "type": "string" },
    { "key": "announcementId", "value": "", "type": "string" },
    { "key": "messageId", "value": "", "type": "string" },
  { "key": "discussionId", "value": "", "type": "string" },
  { "key": "commentId", "value": "", "type": "string" },
  { "key": "replyCommentId", "value": "", "type": "string" }
  ],
  "item": [
    {
      "name": "01 - Admin Login",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/login", "host": ["{{baseUrl}}"], "path": ["api","users","login"] },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{adminUsername}}\",\n  \"password\": \"{{adminPassword}}\",\n  \"role\": \"ADMIN\"\n}",
          "options": { "raw": { "language": "json" } }
        }
      },
      "event": [ { "listen": "test", "script": { "type": "text/javascript", "exec": [
        "const json = pm.response.json();",
        "pm.test('HTTP 200', () => pm.response.code === 200);",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "pm.test('返回 token', () => json && json.data && json.data.token);",
        "if (json && json.data) { pm.collectionVariables.set('authHeader', `${json.data.tokenType} ${json.data.token}`); }"
      ] } } ]
    },
    {
      "name": "02a - Register Teacher",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/register", "host": ["{{baseUrl}}"], "path": ["api","users","register"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{teacherUsername}}\",\n  \"email\": \"{{teacherEmail}}\",\n  \"password\": \"{{teacherPassword}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200/或用户名已存在(400)', () => [200,400].includes(pm.response.code));",
  "if (pm.response.code === 200) { const json = pm.response.json(); pm.test('业务码 200', () => json && json.code === 200); }"
      ] } } ]
    },
    {
      "name": "02b - Register Student",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/register", "host": ["{{baseUrl}}"], "path": ["api","users","register"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{studentUsername}}\",\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"{{studentPassword}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200/或用户名已存在(400)', () => [200,400].includes(pm.response.code));",
  "if (pm.response.code === 200) { const json = pm.response.json(); pm.test('业务码 200', () => json && json.code === 200); }"
      ] } } ]
    },
    {
      "name": "02c - Register Student 2",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/register", "host": ["{{baseUrl}}"], "path": ["api","users","register"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{student2Username}}\",\n  \"email\": \"{{student2Email}}\",\n  \"password\": \"{{student2Password}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200/或用户名已存在(400)', () => [200,400].includes(pm.response.code));",
  "if (pm.response.code === 200) { const json = pm.response.json(); pm.test('业务码 200', () => json && json.code === 200); }"
      ] } } ]
    },
    {
      "name": "02d - Register Student 3",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/register", "host": ["{{baseUrl}}"], "path": ["api","users","register"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{student3Username}}\",\n  \"email\": \"{{student3Email}}\",\n  \"password\": \"{{student3Password}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200/或用户名已存在(400)', () => [200,400].includes(pm.response.code));",
  "if (pm.response.code === 200) { const json = pm.response.json(); pm.test('业务码 200', () => json && json.code === 200); }"
      ] } } ]
    },
    {
      "name": "03.1 - Admin Get Users to Capture IDs",
      "request": {
        "method": "GET",
        "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/users?pageNum=1&pageSize=100", "host": ["{{baseUrl}}"], "path": ["api","users"], "query": [ {"key":"pageNum","value":"1"}, {"key":"pageSize","value":"100"} ] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const list = (json && json.data && json.data.list) || [];",
    "const t = list.find(u => u.username===pm.collectionVariables.get('teacherUsername'));",
    "const s = list.find(u => u.username===pm.collectionVariables.get('studentUsername'));",
    "const s2 = list.find(u => u.username===pm.collectionVariables.get('student2Username'));",
    "const s3 = list.find(u => u.username===pm.collectionVariables.get('student3Username'));",
        "pm.collectionVariables.set('teacherUserId', (t && t.id) || '');",
        "pm.collectionVariables.set('studentUserId', (s && s.id) || '');",
    "pm.collectionVariables.set('student2UserId', (s2 && s2.id) || '');",
    "pm.collectionVariables.set('student3UserId', (s3 && s3.id) || '');",
        "pm.test('拿到 teacherUserId', () => !!pm.collectionVariables.get('teacherUserId'));",
  "pm.test('拿到 studentUserId', () => !!pm.collectionVariables.get('studentUserId'));",
  "pm.test('拿到 student2UserId', () => !!pm.collectionVariables.get('student2UserId'));",
  "pm.test('拿到 student3UserId', () => !!pm.collectionVariables.get('student3UserId'));",
  "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
  {
    "name": "03.2.1 - Admin Set Teacher Role",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/users/setrole", "host": ["{{baseUrl}}"], "path": ["api","users","setrole"] },
        "body": { "mode": "raw", "raw": "{\n  \"userId\": \"{{teacherUserId}}\",\n  \"roleId\": \"ROLE_TEACHER\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "const json = pm.response.json();",
  "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
  {
    "name": "03.2.2 - Admin Get Teacher User Detail",
        "request": {
          "method": "GET",
          "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
          "url": {
            "raw": "{{baseUrl}}/api/users/{{teacherUserId}}",
            "host": ["{{baseUrl}}"],
            "path": ["api", "users", "{{teacherUserId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const json = pm.response.json();",
                "pm.test('HTTP 200', () => pm.response.code===200);",
                "pm.test('业务码 200', () => json && json.code === 200);",
                "pm.test('查看teacher的用户名', () => json && json.data && json.data.username === pm.collectionVariables.get('teacherUsername'));",
                "pm.test('teacher已具备权限', () => json && json.data && Array.isArray(json.data.roles) && json.data.roles.includes('ROLE_TEACHER'));"
              ]
            }
          }
        ]
      },
      {
        "name": "03.3.1 - Admin Delete Student3 User",
        "request": {
          "method": "DELETE",
          "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
          "url": {
            "raw": "{{baseUrl}}/api/users/delete/{{student3UserId}}",
            "host": ["{{baseUrl}}"],
            "path": ["api", "users","delete", "{{student3UserId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const json = pm.response.json();",
                "pm.test('HTTP 200', () => pm.response.code===200);",
                "pm.test('业务码 200', () => json && json.code === 200);"
              ]
            }
          }
        ]
      },
      {
      "name": "03.3.2 - Student3 Login",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/login", "host": ["{{baseUrl}}"], "path": ["api","users","login"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{student3Username}}\",\n  \"password\": \"{{student3Password}}\",\n  \"role\": \"STUDENT\"\n}" }
      },
        "event": [ { "listen": "test", "script": { "exec": [
          "pm.test('登录失败', () => [401].includes(pm.response.code));",
          "let json = null; try { json = pm.response.json(); } catch(e) {}",
          "pm.test('无token返回', () => !(json && json.data && json.data.token));"
        ] } } ]
      },
      {
        "name": "04.1 - Admin Get Profile",
        "request": {
          "method": "GET",
          "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
          "url": { "raw": "{{baseUrl}}/api/users/profile", "host": ["{{baseUrl}}"], "path": ["api","users","profile"] }
        },
        "event": [ { "listen": "test", "script": { "exec": [
          "const json = pm.response.json();",
          "pm.test('HTTP 200', () => pm.response.code===200);",
          "pm.test('业务码 200', () => json && json.code === 200);",
          "pm.test('获取用户id', () => json && json.data && json.data.id && json.data.id === pm.collectionVariables.get('adminUserId'));",
          "pm.test('获取用户名', () => json && json.data && json.data.username === pm.collectionVariables.get('adminUsername'));"
        ] } } ]
      },
      {
        "name": "04.2 - Admin Change Password (Should Fail)",
        "request": {
            "method": "PUT",
            "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
            "url": {
              "raw": "{{baseUrl}}/api/users/password?oldPassword=wrong%20password&newPassword=new%20password!",
              "host": ["{{baseUrl}}"],
              "path": ["api","users","password"],
              "query": [
                { "key": "oldPassword", "value": "wrong password" },
                { "key": "newPassword", "value": "new password!" }
              ]
            }
        },
        "event": [ { "listen": "test", "script": { "exec": [
          "pm.test('修改密码失败', () => [400,401,404].includes(pm.response.code));"
        ] } } ]
    },
    {
        "name": "04.3 - Admin Change Password",
        "request": {
            "method": "PUT",
            "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
            "url": {
              "raw": "{{baseUrl}}/api/users/password?oldPassword={{adminPassword}}&newPassword={{adminPassword}}",
              "host": ["{{baseUrl}}"],
              "path": ["api","users","password"],
              "query": [
                { "key": "oldPassword", "value": "{{adminPassword}}" },
                { "key": "newPassword", "value": "{{adminPassword}}" }
              ]
            }
        },
        "event": [ { "listen": "test", "script": { "exec": [
          "pm.test('修改密码成功', () => [200].includes(pm.response.code));"
        ] } } ]
    },
    {
      "name": "04.4 - Admin Upload Avatar",
      "request": {
        "method": "POST",
        "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/users/avatar", "host": ["{{baseUrl}}"], "path": ["api","users","avatar"] },
        "body": {
          "mode": "formdata",
          "formdata": [
            { "key": "file", "type": "file", "src": "avatar.jpg" }
          ]
        }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "pm.test('返回头像URL', () => json && json.data && typeof json.data.avatarUrl === 'string' && json.data.avatarUrl.length > 0);",
        "pm.collectionVariables.set('adminAvatarUrl', (json && json.data && json.data.avatarUrl) || '');"
      ] } } ]
    },
    {
      "name": "04.5 - Admin Update Profile",
      "request": {
        "method": "PUT",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/users/profile", "host": ["{{baseUrl}}"], "path": ["api","users","profile"] },
        "body": { "mode": "raw", "raw": "{\n  \"avatar\": \"{{adminAvatarUrl}}\",\n  \"profile\": {\n    \"realName\": \"real\",\n    \"gender\": \"male\",\n    \"birthdate\": \"1980-01-01\",\n    \"phoneNum\": \"13800000000\"\n  }\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
          "const json = pm.response.json();",
          "pm.test('HTTP 200', () => pm.response.code===200);",
          "pm.test('业务码 200', () => json && json.code === 200);",
          "pm.test('头像已更新', () => json && json.data && json.data.avatar === pm.collectionVariables.get('adminAvatarUrl'));",
          "pm.test('真实姓名已更新', () => json && json.data && json.data.profile && json.data.profile.realName === 'real');",
          "pm.test('性别已更新', () => json && json.data && json.data.profile && json.data.profile.gender === 'male');",
          "pm.test('生日已更新', () => json && json.data && json.data.profile && json.data.profile.birthdate === '1980-01-01');",
          "pm.test('手机号已更新', () => json && json.data && json.data.profile && json.data.profile.phoneNum === '13800000000');"
        ] } } ]
    },
    {
      "name": "07 - Admin Create Announcement",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/announcements", "host": ["{{baseUrl}}"], "path": ["api","announcements"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"测试公告\",\n  \"content\": \"这是一条由自动化集成测试创建的公告\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "if (json && json.data && json.data.id) pm.collectionVariables.set('announcementId', json.data.id);",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('业务码 200', () => json && json.code === 200);"
      ] } } ]
    },
    {
      "name": "08 - Admin Send Message to Student",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/messages", "host": ["{{baseUrl}}"], "path": ["api","messages"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"测试消息\",\n  \"content\": \"这是一条发给学生的测试消息\",\n  \"receiver\": \"{{studentUsername}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "if (json && json.data && json.data.id) pm.collectionVariables.set('messageId', json.data.id);",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('业务码 200', () => json && json.code === 200);"
      ] } } ]
    },
    {
      "name": "09 - Teacher Login",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/login", "host": ["{{baseUrl}}"], "path": ["api","users","login"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{teacherUsername}}\",\n  \"password\": \"{{teacherPassword}}\",\n  \"role\": \"TEACHER\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "pm.collectionVariables.set('teacherAuth', `${json.data.tokenType} ${json.data.token}`);",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('返回 token', () => json && json.data && json.data.token);"
      ] } } ]
    },
    {
      "name": "10 - Teacher Create Experiment",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{teacherAuth}}" } ],
        "url": { "raw": "{{baseUrl}}/api/experiments", "host": ["{{baseUrl}}"], "path": ["api","experiments"] },
        "body": { "mode": "raw", "raw": "{\n  \"name\": \"自动化实验\",\n  \"description\": \"由集成测试创建的实验\",\n  \"status\": \"DRAFT\",\n  \"startTime\": \"2030-01-01T00:00:00\",\n  \"endTime\": \"2030-12-31T23:59:59\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.collectionVariables.set('experimentId', (json.data && json.data.id) || '');",
  "pm.test('拿到 experimentId', () => !!pm.collectionVariables.get('experimentId'));",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('业务码 200', () => json && json.code === 200);"
      ] } } ]
    },
    {
      "name": "10.5 - Teacher Publish Experiment",
      "request": {
        "method": "PUT",
        "header": [ { "key": "Authorization", "value": "{{teacherAuth}}" } ],
        "url": { "raw": "{{baseUrl}}/api/experiments/{{experimentId}}/publish", "host": ["{{baseUrl}}"], "path": ["api","experiments","{{experimentId}}","publish"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "11 - Teacher Add Task",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{teacherAuth}}" } ],
        "url": { "raw": "{{baseUrl}}/api/experiments/tasks/{{experimentId}}", "host": ["{{baseUrl}}"], "path": ["api","experiments","tasks","{{experimentId}}"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"任务一\",\n  \"description\": \"简单题示例\",\n  \"taskType\": \"OTHER\",\n  \"question\": [\"2+2=?\", \"4\"],\n  \"required\": true\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.collectionVariables.set('taskId', (json.data && json.data.id) || '');",
  "pm.test('拿到 taskId', () => !!pm.collectionVariables.get('taskId'));",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('业务码 200', () => json && json.code === 200);"
      ] } } ]
    },
    {
      "name": "12 - Admin Assign Task To Student",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/experiments/assignments/{{taskId}}", "host": ["{{baseUrl}}"], "path": ["api","experiments","assignments","{{taskId}}"] },
        "body": { "mode": "raw", "raw": "{\n  \"userIds\": [\"{{studentUserId}}\"]\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "12b - Admin Assign Task To Student2",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
        "url": { "raw": "{{baseUrl}}/api/experiments/assignments/{{taskId}}", "host": ["{{baseUrl}}"], "path": ["api","experiments","assignments","{{taskId}}"] },
        "body": { "mode": "raw", "raw": "{\n  \"userIds\": [\"{{student2UserId}}\"]\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "13 - Student Login",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/login", "host": ["{{baseUrl}}"], "path": ["api","users","login"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{studentUsername}}\",\n  \"password\": \"{{studentPassword}}\",\n  \"role\": \"STUDENT\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "pm.collectionVariables.set('studentAuth', `${json.data.tokenType} ${json.data.token}`);",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('返回 token', () => json && json.data && json.data.token);"
      ] } } ]
    },
    {
      "name": "13b - Student2 Login",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "url": { "raw": "{{baseUrl}}/api/users/login", "host": ["{{baseUrl}}"], "path": ["api","users","login"] },
        "body": { "mode": "raw", "raw": "{\n  \"username\": \"{{student2Username}}\",\n  \"password\": \"{{student2Password}}\",\n  \"role\": \"STUDENT\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "pm.collectionVariables.set('student2Auth', `${json.data.tokenType} ${json.data.token}`);",
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "pm.test('返回 token', () => json && json.data && json.data.token);"
      ] } } ]
    },
    {
      "name": "14 - Student Get Announcements",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/announcements", "host":["{{baseUrl}}"], "path":["api","announcements"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "14.5 - Admin Update Announcement",
      "request": {
        "method": "PUT",
        "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{authHeader}}"} ],
        "url": { "raw": "{{baseUrl}}/api/announcements/{{announcementId}}", "host":["{{baseUrl}}"], "path":["api","announcements","{{announcementId}}"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"测试公告-已编辑\",\n  \"content\": \"这是一条由自动化测试修改后的公告\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "pm.test('更新返回同一ID', () => json && json.data && json.data.id === pm.collectionVariables.get('announcementId'));",
        "if(json && json.data){ pm.collectionVariables.set('announcementTitleAfter', json.data.title || ''); pm.collectionVariables.set('announcementContentAfter', json.data.content || ''); }",
        "pm.test('标题包含已编辑', () => (pm.collectionVariables.get('announcementTitleAfter') || '').includes('已编辑'));"
      ] } } ]
    },
    {
      "name": "14.6 - Student Get Announcements (see updated)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/announcements", "host":["{{baseUrl}}"], "path":["api","announcements"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){};",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "const arr = (json && Array.isArray(json.data)) ? json.data : [];",
        "const aid = pm.collectionVariables.get('announcementId');",
        "const tAfter = pm.collectionVariables.get('announcementTitleAfter') || '';",
        "const cAfter = pm.collectionVariables.get('announcementContentAfter') || '';",
        "const it = arr.find(a => a && a.id===aid);",
        "pm.test('学生能看到该公告', () => !!it);",
        "pm.test('标题已更新', () => it && (it.title || '') === tAfter);",
        "pm.test('内容已更新', () => it && (it.content || '') === cAfter);"
      ] } } ]
    },
    {
      "name": "15 - Student Get Messages",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/messages/receiver", "host":["{{baseUrl}}"], "path":["api","messages","receiver"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "16 - Student Get My Experiments",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/student/experiments", "host":["{{baseUrl}}"], "path":["api","student","experiments"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "16b - Student Get Assigned Tasks",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/student/experiments/tasks", "host":["{{baseUrl}}"], "path":["api","student","experiments","tasks"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){}",
        "pm.test('业务码 200', () => json && json.code === 200)"
      ] } } ]
    },
    {
      "name": "17 - Student Create Discussion",
      "request": { "method": "POST", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions", "host":["{{baseUrl}}"], "path":["api","discussions"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"关于自动化实验的讨论\",\n  \"content\": \"这是学生就分配的实验发起的讨论。\",\n  \"richContent\": { \"html\": \"<p>这是更丰富的讨论内容</p>\", \"delta\": {} },\n  \"tags\": [\"实验\", \"讨论\"],\n  \"experimentId\": \"{{experimentId}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
  "if (json && json.data && json.data.id) pm.collectionVariables.set('discussionId', json.data.id);",
  "pm.test('HTTP 200/201', () => [200,201].includes(pm.response.code));",
  "pm.test('业务码 200', () => json && json.code === 200);",
  "pm.test('返回 discussionId', () => json && json.data && json.data.id)"
      ] } } ]
  },
    {
      "name": "17.4 - Student1 Get Discussions (pending visible to self)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions?experimentId={{experimentId}}&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions"], "query":[{"key":"experimentId","value":"{{experimentId}}"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "let json=null; try{ json=pm.response.json(); }catch(e){}",
  "pm.test('业务码 200', () => json && json.code === 200);",
  "const payload = json && json.data;",
  "let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const did = pm.collectionVariables.get('discussionId');",
        "const found = items.some(it => it && (it.id===did));",
        "pm.test('学生1能看到自己未审核讨论', () => found);"
      ] } } ]
    },
    {
      "name": "17.5 - Student2 Get Discussions (pending not visible)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions?experimentId={{experimentId}}&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions"], "query":[{"key":"experimentId","value":"{{experimentId}}"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "let json=null; try{ json=pm.response.json(); }catch(e){}",
  "pm.test('业务码 200', () => json && json.code === 200);",
  "const payload = json && json.data;",
  "let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const did = pm.collectionVariables.get('discussionId');",
        "const found = items.some(it => it && (it.id===did));",
        "pm.test('学生2看不到未审核讨论', () => !found);"
      ] } } ]
    },
    {
      "name": "17.6 - Admin Approve Discussion",
      "request": { "method": "PUT", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{authHeader}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/review", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","review"] },
        "body": { "mode":"raw", "raw": "{\n  \"status\": \"APPROVED\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code===200);"
      ] } } ]
    },
    {
      "name": "17.7 - Student2 Get Discussions (approved visible)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions?experimentId={{experimentId}}&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions"], "query":[{"key":"experimentId","value":"{{experimentId}}"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "let json=null; try{ json=pm.response.json(); }catch(e){}",
  "pm.test('业务码 200', () => json && json.code === 200);",
  "const payload = json && json.data; let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const did = pm.collectionVariables.get('discussionId');",
        "const target = items.find(it => it && (it.id===did));",
        "pm.test('学生2能看到已通过讨论', () => !!target);",
        "if(target){ pm.collectionVariables.set('discussionTitleBefore', target.title || ''); }"
      ] } } ]
    },
    {
      "name": "17.71 - Student2 Like Discussion",
      "request": { "method": "POST", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/like", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","like"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){};",
        "pm.test('业务码 200', () => json && json.code===200);",
        "if(json && json.data && (typeof json.data.isLiked === 'boolean')) { pm.test('已点赞', () => json.data.isLiked === true); }"
      ] } } ]
    },
    {
      "name": "17.72 - Student2 Unlike Discussion",
      "request": { "method": "POST", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/like", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","like"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){};",
        "pm.test('业务码 200', () => json && json.code===200);",
        "if(json && json.data && (typeof json.data.isLiked === 'boolean')) { pm.test('已取消点赞', () => json.data.isLiked === false); }"
      ] } } ]
    },
    {
      "name": "17.75 - Student1 Update Discussion (after approval)",
      "request": {
        "method": "PUT",
        "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{studentAuth}}" } ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}", "host": ["{{baseUrl}}"], "path": ["api","discussions","{{discussionId}}"] },
        "body": { "mode": "raw", "raw": "{\n  \"title\": \"关于自动化实验的讨论-已编辑\",\n  \"content\": \"编辑后的正文内容\",\n  \"richContent\": { \"html\": \"<p>编辑后的富文本</p>\", \"delta\": {} },\n  \"tags\": [\"实验\", \"讨论\", \"已编辑\"],\n  \"experimentId\": \"{{experimentId}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "pm.test('业务码 200', () => json && json.code===200);",
        "pm.test('更新返回同一ID', () => json && json.data && json.data.id===pm.collectionVariables.get('discussionId'));",
        "if(json && json.data && json.data.title){ pm.collectionVariables.set('discussionTitleAfter', json.data.title); }",
        "pm.test('标题已更新包含已编辑', () => json && json.data && json.data.title && json.data.title.includes('已编辑'));"
      ] } } ]
    },
    {
      "name": "17.76 - Student2 Get Discussions (still old content before re-approve)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions?experimentId={{experimentId}}&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions"], "query":[{"key":"experimentId","value":"{{experimentId}}"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){}",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "const payload = json && json.data; let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const did = pm.collectionVariables.get('discussionId');",
        "const target = items.find(it => it && (it.id===did));",
        "pm.test('仍可看到该讨论', () => !!target);",
        "const before = pm.collectionVariables.get('discussionTitleBefore') || '';",
        "pm.test('学生2仍看到编辑前标题', () => target && (target.title || '') === before);"
      ] } } ]
    },
    {
      "name": "17.77 - Admin Approve Discussion (after edit)",
      "request": { "method": "PUT", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{authHeader}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/review", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","review"] },
        "body": { "mode":"raw", "raw": "{\n  \"status\": \"APPROVED\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "const json = pm.response.json();",
        "pm.test('业务码 200', () => json && json.code===200);"
      ] } } ]
    },
    {
      "name": "17.78 - Student2 Get Discussions (now sees edited)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions?experimentId={{experimentId}}&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions"], "query":[{"key":"experimentId","value":"{{experimentId}}"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){}",
        "pm.test('业务码 200', () => json && json.code === 200);",
        "const payload = json && json.data; let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const did = pm.collectionVariables.get('discussionId');",
        "const target = items.find(it => it && (it.id===did));",
        "pm.test('学生2能看到已再次审核的讨论', () => !!target);",
        "const before = pm.collectionVariables.get('discussionTitleBefore') || '';",
        "pm.test('标题已更新(不同于编辑前)', () => target && (target.title || '') !== before);",
        "pm.test('标题包含已编辑', () => target && target.title && target.title.includes('已编辑'));"
      ] } } ]
    },
    {
      "name": "17.8 - Student2 Reply to Discussion",
      "request": { "method": "POST", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/comments", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","comments"] },
        "body": { "mode":"raw", "raw": "{\n  \"content\": \"二号学生的回复\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json();",
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "pm.test('业务码 200', () => json && json.code===200);",
        "if(json && json.data && json.data.id){ pm.collectionVariables.set('commentId', json.data.id); }",
        "pm.test('拿到 commentId', () => !!pm.collectionVariables.get('commentId'));"
      ] } } ]
    },
    {
      "name": "17.9 - Student1 Get Replies (should see reply)",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/comments?rootOnly=false&page=0&size=10", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","comments"], "query":[{"key":"rootOnly","value":"false"},{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200);",
  "let json=null; try{ json=pm.response.json(); }catch(e){}",
  "pm.test('业务码 200', () => json && json.code===200);",
  "const payload = json && json.data; let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
        "const cid = pm.collectionVariables.get('commentId');",
        "const found = items.some(it => it && (it.id===cid));",
        "pm.test('学生1能看到学生2的回复', () => found);"
      ] } } ]
    },
    {
      "name": "17.10 - Student1 Like Student2 Reply",
      "request": { "method": "POST", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{commentId}}/like", "host":["{{baseUrl}}"], "path":["api","comments","{{commentId}}","like"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){}; pm.test('业务码 200', () => json && json.code===200);"
      ] } } ]
    },
    {
      "name": "17.11 - Student1 Unlike Student2 Reply",
      "request": { "method": "POST", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{commentId}}/like", "host":["{{baseUrl}}"], "path":["api","comments","{{commentId}}","like"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200);",
        "let json=null; try{ json=pm.response.json(); }catch(e){}; pm.test('业务码 200', () => json && json.code===200);"
      ] } } ]
    },
    {
      "name": "17.12 - Student1 Reply to Student2 Reply",
      "request": { "method": "POST", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/discussions/{{discussionId}}/comments", "host":["{{baseUrl}}"], "path":["api","discussions","{{discussionId}}","comments"] },
        "body": { "mode":"raw", "raw": "{\n  \"content\": \"学生1对学生2回复的回复\",\n  \"parentId\": \"{{commentId}}\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "const json = pm.response.json(); pm.test('HTTP 200', () => pm.response.code===200); pm.test('业务码 200', () => json && json.code===200);",
        "if(json && json.data && json.data.id){ pm.collectionVariables.set('replyCommentId', json.data.id); }",
        "pm.test('拿到 replyCommentId', () => !!pm.collectionVariables.get('replyCommentId'));"
      ] } } ]
    },
    {
      "name": "17.13 - Student2 Get Replies of Own Comment",
      "request": { "method": "GET", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{commentId}}/replies?page=0&size=10", "host":["{{baseUrl}}"], "path":["api","comments","{{commentId}}","replies"], "query":[{"key":"page","value":"0"},{"key":"size","value":"10"}] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
  "pm.test('HTTP 200', () => pm.response.code===200); let json=null; try{ json=pm.response.json(); }catch(e){}; pm.test('业务码 200', () => json && json.code===200);",
  "const payload = json && json.data; let items = []; if(payload){ if(Array.isArray(payload.items)) items=payload.items; else if(Array.isArray(payload.list)) items=payload.list; }",
  "const rid = pm.collectionVariables.get('replyCommentId'); const found = items.some(it => it && (it.id===rid)); pm.test('学生2能看到学生1的回复', () => found);"
      ] } } ]
    },
    {
      "name": "17.14 - Student2 Report Student1 Reply",
      "request": { "method": "POST", "header": [ {"key":"Content-Type","value":"application/json"}, {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{replyCommentId}}/report", "host":["{{baseUrl}}"], "path":["api","comments","{{replyCommentId}}","report"] },
        "body": { "mode":"raw", "raw": "{\n  \"reason\": \"INAPPROPRIATE\",\n  \"details\": \"测试举报\"\n}" }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200', () => pm.response.code===200); let json=null; try{ json=pm.response.json(); }catch(e){}; pm.test('业务码 200', () => json && json.code===200);"
      ] } } ]
    },
    {
      "name": "17.15 - Student2 Try Delete Student1 Reply (should fail 403)",
      "request": { "method": "DELETE", "header": [ {"key":"Authorization","value":"{{student2Auth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{replyCommentId}}", "host":["{{baseUrl}}"], "path":["api","comments","{{replyCommentId}}"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 403', () => pm.response.code===403);"
      ] } } ]
    },
    {
      "name": "17.16 - Student1 Delete Own Reply",
      "request": { "method": "DELETE", "header": [ {"key":"Authorization","value":"{{studentAuth}}"} ],
        "url": { "raw": "{{baseUrl}}/api/comments/{{replyCommentId}}", "host":["{{baseUrl}}"], "path":["api","comments","{{replyCommentId}}"] }
      },
      "event": [ { "listen": "test", "script": { "exec": [
        "pm.test('HTTP 200/204', () => [200,204].includes(pm.response.code));"
      ] } } ]
    }
  ]
}
